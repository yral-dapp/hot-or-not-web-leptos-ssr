name: deploy preview
on:
  pull_request:
    types: [opened, reopened, synchronize, closed]

env:
  FLY_API_TOKEN: ${{ secrets.HOT_OR_NOT_WEB_LEPTOS_SSR_FLY_IO_GITHUB_ACTION }}
  FLY_ORG: gobazzinga-inc-584

jobs:
  build_check:
    uses: ./.github/workflows/build-check.yml
    with:
      publish-artifact: true

  destroy_preview:
    if: ${{github.event.pull_request.state == 'closed'}}
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Deploy
        id: destroy
        uses: superfly/fly-pr-review-apps@1.2.1

  preview:
    if: ${{ github.event.pull_request.state == 'open'}}
    needs: build_check
    runs-on: ubuntu-latest

    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    # Create a GitHub deployment environment per staging app so it shows up
    # in the pull request UI.
    environment:
      name: pr-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3
      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: build-musl
      - run: chmod +x target/x86_64-unknown-linux-musl/release/hot-or-not-web-leptos-ssr

      - name: Deploy
        id: deploy
        uses: superfly/fly-pr-review-apps@1.5.0

      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Set secret tokens
        run: |
          APP_NAME="pr-${{github.event.number}}-yral-dapp-hot-or-not-web-leptos-ssr"
          flyctl secrets set CF_TOKEN="$CF_TOKEN" --app "$APP_NAME" --stage
          flyctl secrets set BACKEND_ADMIN_IDENTITY="$BACKEND_ADMIN_IDENTITY" --app "$APP_NAME" --stage
          flyctl secrets set COOKIE_KEY="$COOKIE_KEY" --app "$APP_NAME" --stage
          flyctl secrets set REDIS_URL="$REDIS_URL" --app "$APP_NAME" --stage
          flyctl secrets set GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET --app "$APP_NAME" --stage
          flyctl secrets set GRPC_AUTH_TOKEN="$GRPC_AUTH_TOKEN" --app "$APP_NAME" --stage
          flyctl secrets set HOTORNOT_GOOGLE_CLIENT_SECRET="$HOTORNOT_GOOGLE_CLIENT_SECRET" --app "$APP_NAME" --stage
          flyctl secrets set ICPUMPFUN_GOOGLE_CLIENT_SECRET="$ICPUMPFUN_GOOGLE_CLIENT_SECRET" --app "$APP_NAME" --stage
          flyctl secrets set PUMPDUMP_GOOGLE_CLIENT_SECRET="$PUMPDUMP_GOOGLE_CLIENT_SECRET" --app "$APP_NAME" --stage
          flyctl secrets set "HON_GOOGLE_SERVICE_ACCOUNT=$HON_GOOGLE_SERVICE_ACCOUNT" --app "$APP_NAME" --stage
          flyctl secrets set QSTASH_TOKEN="$QSTASH_TOKEN" --app "$APP_NAME" --stage
          flyctl secrets set GA4_API_SECRET="$GA4_API_SECRET" --app "$APP_NAME" --stage
          flyctl secrets set NSFW_GRPC_TOKEN="$NSFW_GRPC_TOKEN" --app "$APP_NAME" --stage
          flyctl secrets set CF_KV_FETCH_URL="$CF_KV_FETCH_URL" --app "$APP_NAME" --stage
          flyctl secrets set CF_KV_FETCH_TOKEN="$CF_KV_FETCH_TOKEN" --app "$APP_NAME" --stage
          flyctl deploy --app $APP_NAME
        env:
          CF_TOKEN: ${{ secrets.CLOUDFLARE_STREAM_IMAGES_ANALYTICS_READ_WRITE_SECRET }}
          BACKEND_ADMIN_IDENTITY: ${{ secrets.YRAL_WHITELISTED_BACKEND_GLOBAL_ADMIN_SECRET_KEY }}
          COOKIE_KEY: ${{ secrets.AUTH_SESSION_COOKIE_SIGNING_SECRET_KEY }}
          REDIS_URL: ${{ secrets.AUTH_FLY_IO_UPSTASH_REDIS_DATABASE_CONNECTION_STRING }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.STAGING_TEMPORARY_GOOGLE_CLIENT_SECRET }}
          FLY_API_TOKEN: ${{ secrets.HOT_OR_NOT_WEB_LEPTOS_SSR_FLY_IO_GITHUB_ACTION }}
          GRPC_AUTH_TOKEN: ${{ secrets.OFF_CHAIN_AGENT_GRPC_AUTH_TOKEN }}
          HOTORNOT_GOOGLE_CLIENT_SECRET: ${{ secrets.HOT_OR_NOT_WTF_DOMAIN_GOOGLE_LOGIN_AUTH_CLIENT_SECRET }}
          ICPUMPFUN_GOOGLE_CLIENT_SECRET: ${{secrets.IC_PUMP_FUN_GOOGLE_AUTH_CLIENT_SECRET}}
          PUMPDUMP_GOOGLE_CLIENT_SECRET: ${{secrets.PUMP_DUMP_WTF_DOMAIN_GOOGLE_LOGIN_AUTH_CLIENT_SECRET}}
          HON_GOOGLE_SERVICE_ACCOUNT: ${{ secrets.HOT_OR_NOT_FEED_INTELLIGENCE_FIREBASE_PROJECT_EVENTS_BQ_SERVICE_ACCOUNT_JSON_FOR_WEB_LEPTOS_SSR_APP }}
          QSTASH_TOKEN: ${{ secrets.QSTASH_TOKEN }}
          GA4_API_SECRET: ${{ secrets.GOOGLE_ANALYTICS_MEASUREMENT_PROTOCOL_API_SECRET }}
          NSFW_GRPC_TOKEN: ${{ secrets.TOKEN_TO_SIGN_OUTGOING_CALLS_TO_NSFW_DETECT_SERVICE }}
          CF_KV_FETCH_URL: https://kv-fetch.go-bazzinga.workers.dev
          CF_KV_FETCH_TOKEN: ${{ secrets.KV_FETCH_JWT_TOKEN }}
  e2e-tests:
    needs: preview
    uses: ./.github/workflows/e2e-tests.yml
    if: ${{ github.event.pull_request.state == 'open'}}
    secrets: inherit
    with:
      preview_url: https://pr-${{github.event.number}}-yral-dapp-hot-or-not-web-leptos-ssr.fly.dev
      build_name: PR-${{github.event.number}}-commit-${{github.sha}}-attempt-${{github.run_attempt}}
